@page "/"
@using Microsoft.JSInterop;
@inject IJSRuntime jsRuntime;

@if (@Gantt == null)
{

}
else
{
    <div style="margin-bottom: 50px">
        <GoogleChart Id="mygantt" DataTable="@Gantt"></GoogleChart>
    </div>
    <div style="margin-top: 50px">
        <GoogleChart Id="mytimeline" DataTable="@Timeline"></GoogleChart>
    </div>
    <button @onclick="RedrawChart">REDRAW</button>
}
@if(@Timelinee != null)
{
    <div style="margin-top: 50px">
        <GoogleChart Id="mytimeline2" DataTable="@Timelinee"></GoogleChart>
    </div>
}


@code{
    public DataTable<DataTableGanttRow> Gantt { get; set; }
    public DataTable<DataTableTimeLineRow> Timeline { get; set; }
    public DataTable<DataTableTimeLineRow> Timelinee { get; set; }

    public async void RedrawChart()
    {
        Timelinee = new DataTable<DataTableTimeLineRow>(jsRuntime, "mytimeline2");

        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Name = "Beginning JavaScript",
            Room = "Magnolia Room",
            Start = new DateTime(2014, 8, 21),
            End = new DateTime(2014, 11, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Magnolia Room",
            Name = "Intermediate JavaScript",
            Start = new DateTime(2014, 5, 21),
            End = new DateTime(2014, 8, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Beginning Google Charts",
            Start = new DateTime(2014, 6, 21),
            End = new DateTime(2014, 9, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Advanced Google Charts",
            Start = new DateTime(2014, 3, 21),
            End = new DateTime(2014, 5, 20)
        });

        await Timelinee.AddOptions(new TimelineOptions
        {
            Height = 300,
            Timeline = new Timeline { ColorByRowLabel = true },
            hAxis = new hAxis { MinValue = new DateTime(2012, 1, 1), MaxValue = new DateTime(2022, 1, 1) }
        });
        await Timelinee.DrawChart();
    }

    protected override async Task OnInitializedAsync()
    {
        //new DataTable constractor with chart id provided instead of providing it with SetChartId function
        Gantt = new DataTable<DataTableGanttRow>(jsRuntime, "mygantt");
        //Gantt = new DataTable<DataTableGanttRow>(jsRuntime);
        //await Gantt.SetChartId("mygantt");

        Gantt.AddRow(new DataTableGanttRow
        {
            TaskId = "2014Spring",
            TaskName = "Spring 2014",
            Resource = "spring",
            StartDate = new DateTime(2014, 2, 22),
            EndDate = new DateTime(2014, 5, 20),
            Duration = null,
            PercentComplete = 100,
            Dependencies = null
        });
        Gantt.AddRow(new DataTableGanttRow
        {
            TaskId = "2014Summer",
            TaskName = "Summer 2014",
            Resource = "summer",
            StartDate = new DateTime(2014, 5, 21),
            EndDate = new DateTime(2014, 8, 20),
            Duration = null,
            PercentComplete = 100,
            Dependencies = null
        });
        Gantt.AddRow(new DataTableGanttRow
        {
            TaskId = "2015Summer",
            TaskName = "Summer 2015",
            Resource = "summer",
            StartDate = new DateTime(2015, 5, 21),
            EndDate = new DateTime(2015, 8, 20),
            Duration = null,
            PercentComplete = 100,
            Dependencies = null
        });
        Gantt.AddRow(new DataTableGanttRow
        {
            TaskId = "2014Autumn",
            TaskName = "Autumn 2014",
            Resource = "autumn",
            StartDate = new DateTime(2014, 8, 21),
            EndDate = new DateTime(2014, 11, 20),
            Duration = null,
            PercentComplete = 100,
            Dependencies = null
        });

        //await Gantt.SetOptions(500);

        await Gantt.DrawChart();


        Timeline = new DataTable<DataTableTimeLineRow>(jsRuntime, "mytimeline");
        //await Timeline.SetChartId("mytimeline");
        //await Timeline.SetCallbackFunctionName(DotNetObjectReference.Create(this), "ShowAlert", true);

        await Timeline.AddOptions(new TimelineOptions
        {
            Height = 300,
            Timeline = new Timeline { ColorByRowLabel = true }
        });

        Timeline.AddRow(new DataTableTimeLineRow
        {
            Name = "Beginning JavaScript",
            Room = "Magnolia Room",
            Start = new DateTime(2014, 8, 21),
            End = new DateTime(2014, 11, 20)
        });
        Timeline.AddRow(new DataTableTimeLineRow
        {
            Room = "Magnolia Room",
            Name = "Intermediate JavaScript",
            Start = new DateTime(2014, 5, 21),
            End = new DateTime(2014, 8, 20)
        });
        Timeline.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Beginning Google Charts",
            Start = new DateTime(2014, 6, 21),
            End = new DateTime(2014, 9, 20)
        });
        Timeline.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Advanced Google Charts",
            Start = new DateTime(2014, 3, 21),
            End = new DateTime(2014, 5, 20)
        });

        await Timeline.DrawChart();

        Timelinee = new DataTable<DataTableTimeLineRow>(jsRuntime, "mytimeline2");

        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Name = "Beginning JavaScript",
            Room = "Magnolia Room",
            Start = new DateTime(2014, 8, 21),
            End = new DateTime(2014, 11, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Magnolia Room",
            Name = "Intermediate JavaScript",
            Start = new DateTime(2014, 5, 21),
            End = new DateTime(2014, 8, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Beginning Google Charts",
            Start = new DateTime(2014, 6, 21),
            End = new DateTime(2014, 9, 20)
        });
        Timelinee.AddRow(new DataTableTimeLineRow
        {
            Room = "Willow Room",
            Name = "Advanced Google Charts",
            Start = new DateTime(2014, 3, 21),
            End = new DateTime(2014, 5, 20)
        });
        

        await Timeline.AddOptions(new TimelineOptions
        {
            Height = 300,
            Timeline = new Timeline { ColorByRowLabel = true }
        });
        await Timelinee.DrawChart();
        StateHasChanged();
    }

    [JSInvokable]
    public void ShowAlert(string name)
    {

    }


}