@using GoogleCharts.NET.Wrapper.DataModels.Common
@using Microsoft.JSInterop;
@inject IJSRuntime jsRuntime;

<h3>GanttTemplate</h3>

@if (@Gantt != null)
{
	<div style="margin-bottom: 50px">
		<GoogleChart DataTable="@Gantt"></GoogleChart>
	</div>
}

@code {
	public DataTable<DataTableGanttRow> Gantt { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Gantt = await DataTable<DataTableGanttRow>.CreateAsync(jsRuntime, "mygantt");

		await Gantt.AddOptions(new GanttOptions
			{
				Height = 300,
				Gantt = new Gantt
				{
					TrackHeight = 50,
					BarHeight = 48
				}
			}
			);

		Gantt.AddRow(new DataTableGanttRow
			{
				TaskId = "2014Spring",
				TaskName = "Spring 2014",
				Resource = "spring",
				StartDate = new DateTime(2014, 2, 22),
				EndDate = new DateTime(2014, 5, 20),
				Duration = null,
				PercentComplete = 100,
				Dependencies = null
			});
		Gantt.AddRow(new DataTableGanttRow
			{
				TaskId = "2014Summer",
				TaskName = "Summer 2014",
				Resource = "summer",
				StartDate = new DateTime(2014, 5, 21),
				EndDate = new DateTime(2014, 8, 20),
				Duration = null,
				PercentComplete = 100,
				Dependencies = null
			});
		Gantt.AddRow(new DataTableGanttRow
			{
				TaskId = "2015Summer",
				TaskName = "Summer 2015",
				Resource = "summer",
				StartDate = new DateTime(2015, 5, 21),
				EndDate = new DateTime(2015, 8, 20),
				Duration = null,
				PercentComplete = 100,
				Dependencies = null
			});
		Gantt.AddRow(new DataTableGanttRow
			{
				TaskId = "2014Autumn",
				TaskName = "Autumn 2014",
				Resource = "autumn",
				StartDate = new DateTime(2014, 8, 21),
				EndDate = new DateTime(2014, 11, 20),
				Duration = null,
				PercentComplete = 100,
				Dependencies = null
			});

		await Gantt.SetCallbackFunctionName(DotNetObjectReference.Create(this), "ShowAlert", true);

		await Gantt.DrawChart();
	}

	[JSInvokable]
	public void ShowAlert()
	{
		Console.WriteLine("HOORAY");
	}

}
